@model AirlinesReservationSystem.Models.Order

@{
    ViewBag.Title = "PaymentResult";
    var TicketList = AirlinesReservationSystem.Models.ars.PaymentDAO.GetTicketList(Model.OrderID);
    int ticketCount = 1;
}

<h2>Order: @Model.OrderID @Html.ActionLink("Back to Homepage", "Index", null, new { @class = "btn btn-ars-light" })</h2>

<div>
    <div>
        @if (Model.Status == 0)
        {
            if (System.DateTime.Now < TicketList.Where(t => t.IsReturn == false).FirstOrDefault().Flight.DepartureTime.AddDays(-14))
            {
                <span class="text-warning">Blocking (Need to be paid before 2 weeks before the flight)</span>
            }
            else
            {
                <span class="text-danger">Blocked but Canceled (Need to be paid before 2 weeks before the flight)</span>
            }

        }
        else if (Model.Status == 1)
        {
            <span class="text-success">Booked</span>
        }
    </div>
    <div class="card">
        <div class="card-header">
            <h4>Departure</h4>
        </div>
        <div class="card-body">
            @foreach (var t in TicketList.Where(t => t.IsReturn == false))
            {
                <hr />
                <div>
                    <p>
                        @(ticketCount++).
                        @t.Flight.Route.Airline.AirlineName <b>#@t.TicketID</b>| Passenger: @t.Firstname.ToUpper() / @t.Lastname.ToUpper() |
                        @if (t.Class == "F")
                        {
                            @:First Class
                        }
                        else if (t.Class == "B")
                        {
                            @:Bussiness Class
                        }
                        else
                        {
                            @:Economy Class
                        }

                    </p>
                    <div class="row">
                        <h4 class="col-md-5 text-center">
                            @t.Flight.Route.DepartureAirport.CityName (@t.Flight.Route.DepartureAirport.AirportID)
                        </h4>
                        <h4 class="col-md-2 text-center">
                            &rArr;
                        </h4>
                        <h4 class="col-md-5 text-center">
                            @t.Flight.Route.DestinationAirport.CityName (@t.Flight.Route.DestinationAirport.AirportID)
                        </h4>
                        <p class="col-md-5 text-muted text-center">
                            @t.Flight.DepartureTime
                        </p>
                        <p class="col-md-2 text-muted text-center">
                            Duration: @System.TimeSpan.FromHours(t.Flight.FlightTime).ToString(@"hh") h
                            @if (int.Parse(System.TimeSpan.FromHours(t.Flight.FlightTime).ToString(@"mm")) > 0)
                            {
                                System.TimeSpan.FromHours(t.Flight.FlightTime).ToString(@"mm");@:m
                            }
                        </p>
                        <p class="col-md-5 text-muted text-center">
                            @t.Flight.ArrivalTime
                        </p>
                    </div>
                </div>
                <hr />
            }
        </div>
    </div>
    <br />
    @if (TicketList.Where(t => t.IsReturn).Count() > 0)
    {
        <div class="card">
            <div class="card-header">
                <h4>Return</h4>
            </div>
            <div class="card-body">
                @foreach (var t in TicketList.Where(t => t.IsReturn == true))
                {
                    <hr />
                    <div>
                        <p>
                            @(ticketCount++). @t.Flight.Route.Airline.AirlineName<b>#@t.TicketID</b> | Passenger: @t.Firstname.ToUpper() / @t.Lastname.ToUpper() |
                            @if (t.Class == "F")
                            {
                                @:First Class
                            }
                            else if (t.Class == "B")
                            {
                                @:Bussiness Class
                            }
                            else
                            {
                                @:Economy Class
                            }

                        </p>
                        <div class="row">
                            <h4 class="col-md-5 text-center">
                                @t.Flight.Route.DepartureAirport.CityName (@t.Flight.Route.DepartureAirport.AirportID)
                            </h4>
                            <h4 class="col-md-2 text-center">
                                &rArr;
                            </h4>
                            <h4 class="col-md-5 text-center">
                                @t.Flight.Route.DestinationAirport.CityName (@t.Flight.Route.DestinationAirport.AirportID)
                            </h4>
                            <p class="col-md-5 text-muted text-center">
                                @t.Flight.DepartureTime
                            </p>
                            <p class="col-md-2 text-muted text-center">
                                Duration: @System.TimeSpan.FromHours(t.Flight.FlightTime).ToString(@"hh") h
                                @if (int.Parse(System.TimeSpan.FromHours(t.Flight.FlightTime).ToString(@"mm")) > 0)
                                {
                                    System.TimeSpan.FromHours(t.Flight.FlightTime).ToString(@"mm");@:m
                                }
                            </p>
                            <p class="col-md-5 text-muted text-center">
                                @t.Flight.ArrivalTime
                            </p>
                        </div>
                    </div>
                    <hr />
                }
            </div>

        </div>
    }
    <br />
    <div class="text-center">
        @if (Model.Status == 0)
        {
            if (Session["user"] == null)
            {
                <a href="/ars/login" value="" class="btn btn-lg btn-warning">Login to pay this order</a>
            }
            else
            {
                if (Session["user"].ToString() == Model.UserID)
                {
                    @Html.ActionLink("Pay this order", "BlockingPayment", new { @id = Model.OrderID }, new { @class = "btn btn-lg btn-success text-center" })
                }

            }
        }


    </div>
</div>