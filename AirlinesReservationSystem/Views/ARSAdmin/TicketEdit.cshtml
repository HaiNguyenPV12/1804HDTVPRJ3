@model AirlinesReservationSystem.Models.Ticket

@{
    ViewBag.Title = "TicketEdit";
}

<h2>Ticket Edit @Html.ActionLink("Back to List", "OrderDetails", new { id= Model.OrderID }, new { @class = "btn btn-primary" })</h2>
<div class="container">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div>

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.TicketID)

            <div class="form-group">
                @Html.LabelFor(model => model.OrderID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.OrderID, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.OrderID, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly"} })
                    @Html.ValidationMessageFor(model => model.FNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PassportNo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @if (Model.Age > 14)
                    {
                        @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control" , @required = "required"} })
                        

                    }
                    else
                    {
                        @Html.EditorFor(model => model.PassportNo, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })

                    }
                    @Html.ValidationMessageFor(model => model.PassportNo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Class, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Class, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Class, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Firstname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Firstname, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                    @Html.ValidationMessageFor(model => model.Firstname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Lastname, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Lastname, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Lastname, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="form-check-inline">
                    <label class="form-check-label">
                        @Html.RadioButtonFor(model => model.Sex, true, new { @checked = true }) Male
                    </label>
                </div>
                <div class="form-check-inline">
                    <label class="form-check-label">
                        @Html.RadioButtonFor(model => model.Sex, false) Female
                    </label>
                </div>
            </div>
            <div class="col-md-2"></div>
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Age, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control" }, @required = "required" })
                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.IsReturn, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsReturn)
                        @Html.ValidationMessageFor(model => model.IsReturn, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-success" />
                </div>
            </div>
        </div>
    }

</div>
